AWSTemplateFormatVersion: 2010-09-09
Description: Deploy Benchmark Flask app to ECS Fargate with ALB (ov1 version)

Parameters:
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: Use default VPC
  SubnetIds:
    Type: List<AWS::EC2::Subnet::Id>
    Description: Use subnets in us-east-1a and us-east-1b

Resources:

  FargateBenchmarkOv1SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow HTTP access to benchmark app (ov1)
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 5000
          ToPort: 5000
          CidrIp: 0.0.0.0/0

  FargateBenchmarkOv1LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /ecs/fargate-benchmark-ov1
      RetentionInDays: 7

  FargateBenchmarkOv1ALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: fargate-benchmark-alb-ov1
      Scheme: internet-facing
      Subnets: !Ref SubnetIds
      SecurityGroups:
        - !Ref FargateBenchmarkOv1SecurityGroup
      Type: application

  FargateBenchmarkOv1TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: fargate-benchmark-tg-ov1
      Port: 5000
      Protocol: HTTP
      VpcId: !Ref VpcId
      TargetType: ip
      HealthCheckPath: /health
      Matcher:
        HttpCode: 200
      HealthCheckIntervalSeconds: 30
      HealthCheckTimeoutSeconds: 10
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 2

  FargateBenchmarkOv1Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref FargateBenchmarkOv1ALB
      Port: 5000
      Protocol: HTTP
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref FargateBenchmarkOv1TargetGroup

  FargateBenchmarkOv1Cluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: fargate-benchmark-cluster-ov1

  FargateBenchmarkOv1TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: fargate-benchmark-task-ov1
      Cpu: '256'
      Memory: '512'
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ExecutionRoleArn: arn:aws:iam::634914382615:role/flask-fargate-execution
      ContainerDefinitions:
        - Name: benchmark-container-ov1
          Image: 634914382615.dkr.ecr.us-east-1.amazonaws.com/fargate-benchmark:latest
          PortMappings:
            - ContainerPort: 5000
              Protocol: tcp
          Essential: true
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: /ecs/fargate-benchmark-ov1
              awslogs-region: us-east-1
              awslogs-stream-prefix: ecs

  FargateBenchmarkOv1Service:
    Type: AWS::ECS::Service
    DependsOn: FargateBenchmarkOv1Listener
    Properties:
      ServiceName: fargate-benchmark-service-ov1
      Cluster: !Ref FargateBenchmarkOv1Cluster
      TaskDefinition: !Ref FargateBenchmarkOv1TaskDefinition
      DesiredCount: 1
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
            - !Ref FargateBenchmarkOv1SecurityGroup
          Subnets: !Ref SubnetIds
      LoadBalancers:
        - ContainerName: benchmark-container-ov1
          ContainerPort: 5000
          TargetGroupArn: !Ref FargateBenchmarkOv1TargetGroup
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 100
        DeploymentCircuitBreaker:
          Enable: true
          Rollback: true

Outputs:
  LoadBalancerDNSOv1:
    Description: DNS name of the load balancer (ov1)
    Value: !GetAtt FargateBenchmarkOv1ALB.DNSName
